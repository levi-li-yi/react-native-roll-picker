{"version":3,"names":["React","Children","useCallback","useMemo","useState","StyleSheet","Platform","processColor","View","useWindowDimensions","NativePicker","Picker","curtainColor","hasCurtain","hasIndicator","indicatorColor","indicatorSize","itemSpace","textColor","textSize","loop","numberOfLines","onChange","style","children","testID","width","windowWidth","viewWidth","setViewWidth","data","columnWidths","selectedIndexes","useNativePickerColumns","handleOnChange","nativeEvent","forEach","columnChild","index","column","props","handleOnLayout","layout","OS","styles","picker","androidContainer","map","componentData","LABEL_INSET_SPACE","availableSpace","columnChildIndex","columnItems","itemChild","itemChildIndex","selectedValue","value","length","push","label","color","w","Math","max","columnsWithoutWidth","filter","create","flexDirection","height"],"sources":["Picker.tsx"],"sourcesContent":["import React, {\n  Children,\n  ReactElement,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react';\nimport {\n  StyleSheet,\n  Platform,\n  processColor,\n  View,\n  StyleProp,\n  ViewStyle,\n  useWindowDimensions,\n  LayoutChangeEvent,\n} from 'react-native';\nimport { NativePicker } from './NativePicker';\nimport type { PickerColumnProps } from './PickerColumn';\nimport type {\n  NativeItem,\n  NativeOnChange,\n  NativePickerDataItem,\n  PickerColumnChangeItem,\n} from './types';\n\ntype PickerChild = ReactElement<PickerColumnProps>;\n\nexport interface PickerProps {\n  loop?: boolean;\n  children: PickerChild | PickerChild[];\n  hasCurtain?: boolean;\n  curtainColor?: string;\n  hasIndicator?: boolean;\n  indicatorColor?: string;\n  indicatorSize?: number;\n  itemSpace?: number;\n  textColor?: string;\n  textSize?: number;\n  numberOfLines?: number;\n  style?: StyleProp<ViewStyle>;\n  onChange?: (item: PickerColumnChangeItem) => void;\n  testID?: string;\n}\n\nexport const Picker = ({\n  curtainColor = 'hsla(0, 0%, 0%, 0.1)',\n  hasCurtain = true,\n  hasIndicator = true,\n  indicatorColor = 'hsla(0, 0%, 0%, 0.1)',\n  indicatorSize = 1,\n  itemSpace = 12,\n  textColor = '#000000',\n  textSize = 20,\n  loop,\n  numberOfLines = 1,\n  onChange,\n  style,\n  children,\n  testID,\n}: PickerProps) => {\n  const { width: windowWidth } = useWindowDimensions();\n  const [viewWidth, setViewWidth] = useState(windowWidth);\n  const { data, columnWidths, selectedIndexes } = useNativePickerColumns({\n    children,\n    textColor,\n    viewWidth,\n  });\n\n  // console.log('data, columnWidths, selectedIndexes, windowWidth', data, columnWidths, selectedIndexes, windowWidth)\n\n  const handleOnChange: NativeOnChange = useCallback(\n    ({ nativeEvent }) => {\n      if (onChange) {\n        onChange(nativeEvent);\n      }\n\n      Children.forEach(children, (columnChild, index) => {\n        if (index === nativeEvent.column && columnChild.props.onChange) {\n          columnChild.props.onChange(nativeEvent);\n        }\n      });\n    },\n    [onChange, children]\n  );\n\n  const handleOnLayout = useCallback(\n    ({\n      nativeEvent: {\n        layout: { width },\n      },\n    }: LayoutChangeEvent) => setViewWidth(width),\n    []\n  );\n\n  if (Platform.OS === 'ios') {\n    return (\n      <View onLayout={handleOnLayout}>\n        <NativePicker\n          selectedIndexes={selectedIndexes}\n          onChange={handleOnChange}\n          numberOfLines={numberOfLines}\n          data={data}\n          columnWidths={columnWidths}\n          loop={loop}\n          style={[styles.picker, style]}\n          testID={testID}\n        />\n      </View>\n    );\n  }\n\n  if (Platform.OS === 'android') {\n    return (\n      <View onLayout={handleOnLayout} style={styles.androidContainer}>\n        {data.map((componentData, index) => (\n          <View\n            key={`picky-component-${index}`}\n            style={[\n              {\n                width: columnWidths[index] + LABEL_INSET_SPACE,\n              },\n              style,\n            ]}\n          >\n            <NativePicker\n              column={index}\n              data={componentData}\n              loop={loop}\n              onChange={handleOnChange}\n              curtainColor={processColor(curtainColor)}\n              hasCurtain={hasCurtain}\n              hasIndicator={hasIndicator}\n              indicatorColor={processColor(indicatorColor)}\n              indicatorSize={indicatorSize}\n              itemSpace={itemSpace}\n              textColor={processColor(textColor)}\n              textSize={textSize}\n              selectedIndex={selectedIndexes[index]}\n              style={styles.picker}\n              testID={testID}\n            />\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return null;\n};\n\nconst useNativePickerColumns = ({\n  viewWidth,\n  children,\n  textColor,\n}: Required<Pick<PickerProps, 'children' | 'textColor'>> & {\n  viewWidth: number;\n}) =>\n  useMemo(() => {\n    let columnWidths: number[] = [];\n    const selectedIndexes: number[] = [];\n    const data: NativePickerDataItem[] = [];\n\n    let availableSpace = viewWidth;\n\n    Children.forEach(children, (columnChild, columnChildIndex) => {\n      const columnItems: NativeItem[] = [];\n\n      Children.forEach(\n        columnChild.props.children,\n        (itemChild, itemChildIndex) => {\n          if (\n            columnChild.props.selectedValue &&\n            itemChild.props.value === columnChild.props.selectedValue &&\n            selectedIndexes.length <= columnChildIndex\n          ) {\n            selectedIndexes.push(itemChildIndex);\n          }\n\n          columnItems.push({\n            label: itemChild.props.label,\n            value: itemChild.props.value,\n            textColor: processColor(itemChild.props.color ?? textColor),\n            testID: itemChild.props.testID,\n          });\n        }\n      );\n\n      if (selectedIndexes.length <= columnChildIndex) {\n        selectedIndexes.push(0);\n      }\n\n      if (typeof columnChild.props.width === 'number') {\n        const w = Math.max(columnChild.props.width - LABEL_INSET_SPACE, 0);\n\n        availableSpace -= columnChild.props.width;\n\n        columnWidths.push(w);\n      } else {\n        columnWidths.push(-1);\n      }\n\n      data.push(columnItems);\n    });\n\n    // Automatically set width for remaining columns to the available space\n    const columnsWithoutWidth = columnWidths.filter((w) => w < 0);\n    if (columnsWithoutWidth.length) {\n      columnWidths = columnWidths.map((w) =>\n        w < 0\n          ? Math.max(\n              availableSpace / columnsWithoutWidth.length - LABEL_INSET_SPACE,\n              0\n            )\n          : w\n      );\n    }\n\n    return { data, columnWidths, selectedIndexes };\n  }, [children, textColor, viewWidth]);\n\nconst LABEL_INSET_SPACE = 20;\n\nconst styles = StyleSheet.create({\n  androidContainer: {\n    flexDirection: 'row',\n    width: '100%',\n  },\n  picker: {\n    height: 216,\n  },\n});\n"],"mappings":"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"}