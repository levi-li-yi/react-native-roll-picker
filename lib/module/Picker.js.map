{"version":3,"names":["React","Children","useCallback","useMemo","useState","StyleSheet","Platform","processColor","View","useWindowDimensions","NativePicker","Picker","curtainColor","hasCurtain","hasIndicator","indicatorColor","indicatorSize","itemSpace","textColor","textSize","loop","numberOfLines","onChange","style","children","testID","width","windowWidth","viewWidth","setViewWidth","data","columnWidths","selectedIndexes","useNativePickerColumns","handleOnChange","nativeEvent","forEach","columnChild","index","column","props","handleOnLayout","layout","OS","createElement","onLayout","styles","picker","androidContainer","map","componentData","key","LABEL_INSET_SPACE","selectedIndex","availableSpace","columnChildIndex","columnItems","itemChild","itemChildIndex","selectedValue","value","length","push","label","color","w","Math","max","columnsWithoutWidth","filter","create","flexDirection","height"],"sources":["Picker.tsx"],"sourcesContent":["// @ts-nocheck\r\nimport React, {\r\n  Children,\r\n  ReactElement,\r\n  useCallback,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Platform,\r\n  processColor,\r\n  View,\r\n  StyleProp,\r\n  ViewStyle,\r\n  useWindowDimensions,\r\n  LayoutChangeEvent,\r\n} from 'react-native';\r\nimport { NativePicker } from './NativePicker';\r\nimport type { PickerColumnProps } from './PickerColumn';\r\nimport type {\r\n  NativeItem,\r\n  NativeOnChange,\r\n  NativePickerDataItem,\r\n  PickerColumnChangeItem,\r\n} from './types';\r\n\r\ntype PickerChild = ReactElement<PickerColumnProps>;\r\n\r\nexport interface PickerProps {\r\n  loop?: boolean;\r\n  children: PickerChild | PickerChild[];\r\n  hasCurtain?: boolean;\r\n  curtainColor?: string;\r\n  hasIndicator?: boolean;\r\n  indicatorColor?: string;\r\n  indicatorSize?: number;\r\n  itemSpace?: number;\r\n  textColor?: string;\r\n  textSize?: number;\r\n  numberOfLines?: number;\r\n  style?: StyleProp<ViewStyle>;\r\n  onChange?: (item: PickerColumnChangeItem) => void;\r\n  testID?: string;\r\n}\r\n\r\nexport const Picker = ({\r\n  curtainColor = 'hsla(0, 0%, 0%, 0.1)',\r\n  hasCurtain = true,\r\n  hasIndicator = true,\r\n  indicatorColor = 'hsla(0, 0%, 0%, 0.1)',\r\n  indicatorSize = 1,\r\n  itemSpace = 12,\r\n  textColor = '#000000',\r\n  textSize = 30,\r\n  loop,\r\n  numberOfLines = 1,\r\n  onChange,\r\n  style,\r\n  children,\r\n  testID,\r\n}: PickerProps) => {\r\n  const { width: windowWidth } = useWindowDimensions();\r\n  const [viewWidth, setViewWidth] = useState(windowWidth);\r\n  const { data, columnWidths, selectedIndexes } = useNativePickerColumns({\r\n    children,\r\n    textColor,\r\n    viewWidth,\r\n  });\r\n\r\n  // console.log('data, columnWidths, selectedIndexes, windowWidth', data, columnWidths, selectedIndexes, windowWidth)\r\n\r\n  const handleOnChange: NativeOnChange = useCallback(\r\n    ({ nativeEvent }) => {\r\n      if (onChange) {\r\n        onChange(nativeEvent);\r\n      }\r\n\r\n      Children.forEach(children, (columnChild, index) => {\r\n        if (index === nativeEvent.column && columnChild.props.onChange) {\r\n          columnChild.props.onChange(nativeEvent);\r\n        }\r\n      });\r\n    },\r\n    [onChange, children]\r\n  );\r\n\r\n  const handleOnLayout = useCallback(\r\n    ({\r\n      nativeEvent: {\r\n        layout: { width },\r\n      },\r\n    }: LayoutChangeEvent) => setViewWidth(width),\r\n    []\r\n  );\r\n\r\n  if (Platform.OS === 'ios') {\r\n    return (\r\n      <View onLayout={handleOnLayout}>\r\n        <NativePicker\r\n          selectedIndexes={selectedIndexes}\r\n          onChange={handleOnChange}\r\n          numberOfLines={numberOfLines}\r\n          data={data}\r\n          columnWidths={columnWidths}\r\n          loop={loop}\r\n          style={[styles.picker, style]}\r\n          testID={testID}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (Platform.OS === 'android') {\r\n    return (\r\n      <View onLayout={handleOnLayout} style={styles.androidContainer}>\r\n        {data.map((componentData, index) => (\r\n          <View\r\n            key={`picky-component-${index}`}\r\n            style={[\r\n              {\r\n                width: columnWidths[index] + LABEL_INSET_SPACE,\r\n              },\r\n              style,\r\n            ]}\r\n          >\r\n            <NativePicker\r\n              column={index}\r\n              data={componentData}\r\n              loop={loop}\r\n              onChange={handleOnChange}\r\n              curtainColor={processColor(curtainColor)}\r\n              hasCurtain={hasCurtain}\r\n              hasIndicator={hasIndicator}\r\n              indicatorColor={processColor(indicatorColor)}\r\n              indicatorSize={indicatorSize}\r\n              itemSpace={itemSpace}\r\n              textColor={processColor(textColor)}\r\n              textSize={textSize}\r\n              selectedIndex={selectedIndexes[index]}\r\n              style={styles.picker}\r\n              testID={testID}\r\n            />\r\n          </View>\r\n        ))}\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst useNativePickerColumns = ({\r\n  viewWidth,\r\n  children,\r\n  textColor,\r\n}: Required<Pick<PickerProps, 'children' | 'textColor'>> & {\r\n  viewWidth: number;\r\n}) =>\r\n  useMemo(() => {\r\n    let columnWidths: number[] = [];\r\n    const selectedIndexes: number[] = [];\r\n    const data: NativePickerDataItem[] = [];\r\n\r\n    let availableSpace = viewWidth;\r\n\r\n    Children.forEach(children, (columnChild, columnChildIndex) => {\r\n      const columnItems: NativeItem[] = [];\r\n\r\n      Children.forEach(\r\n        columnChild.props.children,\r\n        (itemChild, itemChildIndex) => {\r\n          if (\r\n            columnChild.props.selectedValue &&\r\n            itemChild.props.value === columnChild.props.selectedValue &&\r\n            selectedIndexes.length <= columnChildIndex\r\n          ) {\r\n            selectedIndexes.push(itemChildIndex);\r\n          }\r\n\r\n          columnItems.push({\r\n            label: itemChild.props.label,\r\n            value: itemChild.props.value,\r\n            textColor: processColor(itemChild.props.color ?? textColor),\r\n            testID: itemChild.props.testID,\r\n          });\r\n        }\r\n      );\r\n\r\n      if (selectedIndexes.length <= columnChildIndex) {\r\n        selectedIndexes.push(0);\r\n      }\r\n\r\n      if (typeof columnChild.props.width === 'number') {\r\n        const w = Math.max(columnChild.props.width - LABEL_INSET_SPACE, 0);\r\n\r\n        availableSpace -= columnChild.props.width;\r\n\r\n        columnWidths.push(w);\r\n      } else {\r\n        columnWidths.push(-1);\r\n      }\r\n\r\n      data.push(columnItems);\r\n    });\r\n\r\n    // Automatically set width for remaining columns to the available space\r\n    const columnsWithoutWidth = columnWidths.filter((w) => w < 0);\r\n    if (columnsWithoutWidth.length) {\r\n      columnWidths = columnWidths.map((w) =>\r\n        w < 0\r\n          ? Math.max(\r\n              availableSpace / columnsWithoutWidth.length - LABEL_INSET_SPACE,\r\n              0\r\n            )\r\n          : w\r\n      );\r\n    }\r\n\r\n    return { data, columnWidths, selectedIndexes };\r\n  }, [children, textColor, viewWidth]);\r\n\r\nconst LABEL_INSET_SPACE = 20;\r\n\r\nconst styles = StyleSheet.create({\r\n  androidContainer: {\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n  },\r\n  picker: {\r\n    height: 316,\r\n  },\r\n});\r\n"],"mappings":"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"}