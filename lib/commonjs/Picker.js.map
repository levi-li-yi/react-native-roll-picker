{"version":3,"names":["Picker","curtainColor","hasCurtain","hasIndicator","indicatorColor","indicatorSize","itemSpace","textColor","textSize","loop","numberOfLines","onChange","style","children","testID","width","windowWidth","useWindowDimensions","viewWidth","setViewWidth","useState","data","columnWidths","selectedIndexes","useNativePickerColumns","handleOnChange","useCallback","nativeEvent","Children","forEach","columnChild","index","column","props","handleOnLayout","layout","Platform","OS","styles","picker","androidContainer","map","componentData","LABEL_INSET_SPACE","processColor","useMemo","availableSpace","columnChildIndex","columnItems","itemChild","itemChildIndex","selectedValue","value","length","push","label","color","w","Math","max","columnsWithoutWidth","filter","StyleSheet","create","flexDirection","height"],"sources":["Picker.tsx"],"sourcesContent":["import React, {\n  Children,\n  ReactElement,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react';\nimport {\n  StyleSheet,\n  Platform,\n  processColor,\n  View,\n  StyleProp,\n  ViewStyle,\n  useWindowDimensions,\n  LayoutChangeEvent,\n} from 'react-native';\nimport { NativePicker } from './NativePicker';\nimport type { PickerColumnProps } from './PickerColumn';\nimport type {\n  NativeItem,\n  NativeOnChange,\n  NativePickerDataItem,\n  PickerColumnChangeItem,\n} from './types';\n\ntype PickerChild = ReactElement<PickerColumnProps>;\n\nexport interface PickerProps {\n  loop?: boolean;\n  children: PickerChild | PickerChild[];\n  hasCurtain?: boolean;\n  curtainColor?: string;\n  hasIndicator?: boolean;\n  indicatorColor?: string;\n  indicatorSize?: number;\n  itemSpace?: number;\n  textColor?: string;\n  textSize?: number;\n  numberOfLines?: number;\n  style?: StyleProp<ViewStyle>;\n  onChange?: (item: PickerColumnChangeItem) => void;\n  testID?: string;\n}\n\nexport const Picker = ({\n  curtainColor = 'hsla(0, 0%, 0%, 0.1)',\n  hasCurtain = true,\n  hasIndicator = true,\n  indicatorColor = 'hsla(0, 0%, 0%, 0.1)',\n  indicatorSize = 1,\n  itemSpace = 12,\n  textColor = '#000000',\n  textSize = 20,\n  loop,\n  numberOfLines = 1,\n  onChange,\n  style,\n  children,\n  testID,\n}: PickerProps) => {\n  const { width: windowWidth } = useWindowDimensions();\n  const [viewWidth, setViewWidth] = useState(windowWidth);\n  const { data, columnWidths, selectedIndexes } = useNativePickerColumns({\n    children,\n    textColor,\n    viewWidth,\n  });\n\n  const handleOnChange: NativeOnChange = useCallback(\n    ({ nativeEvent }) => {\n      if (onChange) {\n        onChange(nativeEvent);\n      }\n\n      Children.forEach(children, (columnChild, index) => {\n        if (index === nativeEvent.column && columnChild.props.onChange) {\n          columnChild.props.onChange(nativeEvent);\n        }\n      });\n    },\n    [onChange, children]\n  );\n\n  const handleOnLayout = useCallback(\n    ({\n      nativeEvent: {\n        layout: { width },\n      },\n    }: LayoutChangeEvent) => setViewWidth(width),\n    []\n  );\n\n  if (Platform.OS === 'ios') {\n    return (\n      <View onLayout={handleOnLayout}>\n        <NativePicker\n          selectedIndexes={selectedIndexes}\n          onChange={handleOnChange}\n          numberOfLines={numberOfLines}\n          data={data}\n          columnWidths={columnWidths}\n          loop={loop}\n          style={[styles.picker, style]}\n          testID={testID}\n        />\n      </View>\n    );\n  }\n\n  if (Platform.OS === 'android') {\n    return (\n      <View onLayout={handleOnLayout} style={styles.androidContainer}>\n        {data.map((componentData, index) => (\n          <View\n            key={`picky-component-${index}`}\n            style={[\n              {\n                width: columnWidths[index] + LABEL_INSET_SPACE,\n              },\n              style,\n            ]}\n          >\n            <NativePicker\n              column={index}\n              data={componentData}\n              loop={loop}\n              onChange={handleOnChange}\n              curtainColor={processColor(curtainColor)}\n              hasCurtain={hasCurtain}\n              hasIndicator={hasIndicator}\n              indicatorColor={processColor(indicatorColor)}\n              indicatorSize={indicatorSize}\n              itemSpace={itemSpace}\n              textColor={processColor(textColor)}\n              textSize={textSize}\n              selectedIndex={selectedIndexes[index]}\n              style={styles.picker}\n              testID={testID}\n            />\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return null;\n};\n\nconst useNativePickerColumns = ({\n  viewWidth,\n  children,\n  textColor,\n}: Required<Pick<PickerProps, 'children' | 'textColor'>> & {\n  viewWidth: number;\n}) =>\n  useMemo(() => {\n    let columnWidths: number[] = [];\n    const selectedIndexes: number[] = [];\n    const data: NativePickerDataItem[] = [];\n\n    let availableSpace = viewWidth;\n\n    Children.forEach(children, (columnChild, columnChildIndex) => {\n      const columnItems: NativeItem[] = [];\n\n      Children.forEach(\n        columnChild.props.children,\n        (itemChild, itemChildIndex) => {\n          if (\n            columnChild.props.selectedValue &&\n            itemChild.props.value === columnChild.props.selectedValue &&\n            selectedIndexes.length <= columnChildIndex\n          ) {\n            selectedIndexes.push(itemChildIndex);\n          }\n\n          columnItems.push({\n            label: itemChild.props.label,\n            value: itemChild.props.value,\n            textColor: processColor(itemChild.props.color ?? textColor),\n            testID: itemChild.props.testID,\n          });\n        }\n      );\n\n      if (selectedIndexes.length <= columnChildIndex) {\n        selectedIndexes.push(0);\n      }\n\n      if (typeof columnChild.props.width === 'number') {\n        const w = Math.max(columnChild.props.width - LABEL_INSET_SPACE, 0);\n\n        availableSpace -= columnChild.props.width;\n\n        columnWidths.push(w);\n      } else {\n        columnWidths.push(-1);\n      }\n\n      data.push(columnItems);\n    });\n\n    // Automatically set width for remaining columns to the available space\n    const columnsWithoutWidth = columnWidths.filter((w) => w < 0);\n    if (columnsWithoutWidth.length) {\n      columnWidths = columnWidths.map((w) =>\n        w < 0\n          ? Math.max(\n              availableSpace / columnsWithoutWidth.length - LABEL_INSET_SPACE,\n              0\n            )\n          : w\n      );\n    }\n\n    return { data, columnWidths, selectedIndexes };\n  }, [children, textColor, viewWidth]);\n\nconst LABEL_INSET_SPACE = 20;\n\nconst styles = StyleSheet.create({\n  androidContainer: {\n    flexDirection: 'row',\n    width: '100%',\n  },\n  picker: {\n    height: 216,\n  },\n});\n"],"mappings":"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"}