{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_NativePicker","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","Picker","curtainColor","hasCurtain","hasIndicator","indicatorColor","indicatorSize","itemSpace","textColor","textSize","loop","numberOfLines","onChange","style","children","testID","width","windowWidth","useWindowDimensions","viewWidth","setViewWidth","useState","data","columnWidths","selectedIndexes","useNativePickerColumns","handleOnChange","useCallback","nativeEvent","Children","forEach","columnChild","index","column","props","handleOnLayout","layout","Platform","OS","createElement","View","onLayout","NativePicker","styles","picker","androidContainer","map","componentData","key","LABEL_INSET_SPACE","processColor","selectedIndex","exports","useMemo","availableSpace","columnChildIndex","columnItems","itemChild","itemChildIndex","selectedValue","value","length","push","label","color","w","Math","max","columnsWithoutWidth","filter","StyleSheet","create","flexDirection","height"],"sources":["Picker.tsx"],"sourcesContent":["// @ts-nocheck\r\nimport React, {\r\n  Children,\r\n  ReactElement,\r\n  useCallback,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Platform,\r\n  processColor,\r\n  View,\r\n  StyleProp,\r\n  ViewStyle,\r\n  useWindowDimensions,\r\n  LayoutChangeEvent,\r\n} from 'react-native';\r\nimport { NativePicker } from './NativePicker';\r\nimport type { PickerColumnProps } from './PickerColumn';\r\nimport type {\r\n  NativeItem,\r\n  NativeOnChange,\r\n  NativePickerDataItem,\r\n  PickerColumnChangeItem,\r\n} from './types';\r\n\r\ntype PickerChild = ReactElement<PickerColumnProps>;\r\n\r\nexport interface PickerProps {\r\n  loop?: boolean;\r\n  children: PickerChild | PickerChild[];\r\n  hasCurtain?: boolean;\r\n  curtainColor?: string;\r\n  hasIndicator?: boolean;\r\n  indicatorColor?: string;\r\n  indicatorSize?: number;\r\n  itemSpace?: number;\r\n  textColor?: string;\r\n  textSize?: number;\r\n  numberOfLines?: number;\r\n  style?: StyleProp<ViewStyle>;\r\n  onChange?: (item: PickerColumnChangeItem) => void;\r\n  testID?: string;\r\n}\r\n\r\nexport const Picker = ({\r\n  curtainColor = 'hsla(0, 0%, 0%, 0.1)',\r\n  hasCurtain = true,\r\n  hasIndicator = true,\r\n  indicatorColor = 'hsla(0, 0%, 0%, 0.1)',\r\n  indicatorSize = 1,\r\n  itemSpace = 12,\r\n  textColor = '#000000',\r\n  textSize = 30,\r\n  loop,\r\n  numberOfLines = 1,\r\n  onChange,\r\n  style,\r\n  children,\r\n  testID,\r\n}: PickerProps) => {\r\n  const { width: windowWidth } = useWindowDimensions();\r\n  const [viewWidth, setViewWidth] = useState(windowWidth);\r\n  const { data, columnWidths, selectedIndexes } = useNativePickerColumns({\r\n    children,\r\n    textColor,\r\n    viewWidth,\r\n  });\r\n\r\n  // console.log('data, columnWidths, selectedIndexes, windowWidth', data, columnWidths, selectedIndexes, windowWidth)\r\n\r\n  const handleOnChange: NativeOnChange = useCallback(\r\n    ({ nativeEvent }) => {\r\n      if (onChange) {\r\n        onChange(nativeEvent);\r\n      }\r\n\r\n      Children.forEach(children, (columnChild, index) => {\r\n        if (index === nativeEvent.column && columnChild.props.onChange) {\r\n          columnChild.props.onChange(nativeEvent);\r\n        }\r\n      });\r\n    },\r\n    [onChange, children]\r\n  );\r\n\r\n  const handleOnLayout = useCallback(\r\n    ({\r\n      nativeEvent: {\r\n        layout: { width },\r\n      },\r\n    }: LayoutChangeEvent) => setViewWidth(width),\r\n    []\r\n  );\r\n\r\n  if (Platform.OS === 'ios') {\r\n    return (\r\n      <View onLayout={handleOnLayout}>\r\n        <NativePicker\r\n          selectedIndexes={selectedIndexes}\r\n          onChange={handleOnChange}\r\n          numberOfLines={numberOfLines}\r\n          data={data}\r\n          columnWidths={columnWidths}\r\n          loop={loop}\r\n          style={[styles.picker, style]}\r\n          testID={testID}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (Platform.OS === 'android') {\r\n    return (\r\n      <View onLayout={handleOnLayout} style={styles.androidContainer}>\r\n        {data.map((componentData, index) => (\r\n          <View\r\n            key={`picky-component-${index}`}\r\n            style={[\r\n              {\r\n                width: columnWidths[index] + LABEL_INSET_SPACE,\r\n              },\r\n              style,\r\n            ]}\r\n          >\r\n            <NativePicker\r\n              column={index}\r\n              data={componentData}\r\n              loop={loop}\r\n              onChange={handleOnChange}\r\n              curtainColor={processColor(curtainColor)}\r\n              hasCurtain={hasCurtain}\r\n              hasIndicator={hasIndicator}\r\n              indicatorColor={processColor(indicatorColor)}\r\n              indicatorSize={indicatorSize}\r\n              itemSpace={itemSpace}\r\n              textColor={processColor(textColor)}\r\n              textSize={textSize}\r\n              selectedIndex={selectedIndexes[index]}\r\n              style={styles.picker}\r\n              testID={testID}\r\n            />\r\n          </View>\r\n        ))}\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst useNativePickerColumns = ({\r\n  viewWidth,\r\n  children,\r\n  textColor,\r\n}: Required<Pick<PickerProps, 'children' | 'textColor'>> & {\r\n  viewWidth: number;\r\n}) =>\r\n  useMemo(() => {\r\n    let columnWidths: number[] = [];\r\n    const selectedIndexes: number[] = [];\r\n    const data: NativePickerDataItem[] = [];\r\n\r\n    let availableSpace = viewWidth;\r\n\r\n    Children.forEach(children, (columnChild, columnChildIndex) => {\r\n      const columnItems: NativeItem[] = [];\r\n\r\n      Children.forEach(\r\n        columnChild.props.children,\r\n        (itemChild, itemChildIndex) => {\r\n          if (\r\n            columnChild.props.selectedValue &&\r\n            itemChild.props.value === columnChild.props.selectedValue &&\r\n            selectedIndexes.length <= columnChildIndex\r\n          ) {\r\n            selectedIndexes.push(itemChildIndex);\r\n          }\r\n\r\n          columnItems.push({\r\n            label: itemChild.props.label,\r\n            value: itemChild.props.value,\r\n            textColor: processColor(itemChild.props.color ?? textColor),\r\n            testID: itemChild.props.testID,\r\n          });\r\n        }\r\n      );\r\n\r\n      if (selectedIndexes.length <= columnChildIndex) {\r\n        selectedIndexes.push(0);\r\n      }\r\n\r\n      if (typeof columnChild.props.width === 'number') {\r\n        const w = Math.max(columnChild.props.width - LABEL_INSET_SPACE, 0);\r\n\r\n        availableSpace -= columnChild.props.width;\r\n\r\n        columnWidths.push(w);\r\n      } else {\r\n        columnWidths.push(-1);\r\n      }\r\n\r\n      data.push(columnItems);\r\n    });\r\n\r\n    // Automatically set width for remaining columns to the available space\r\n    const columnsWithoutWidth = columnWidths.filter((w) => w < 0);\r\n    if (columnsWithoutWidth.length) {\r\n      columnWidths = columnWidths.map((w) =>\r\n        w < 0\r\n          ? Math.max(\r\n              availableSpace / columnsWithoutWidth.length - LABEL_INSET_SPACE,\r\n              0\r\n            )\r\n          : w\r\n      );\r\n    }\r\n\r\n    return { data, columnWidths, selectedIndexes };\r\n  }, [children, textColor, viewWidth]);\r\n\r\nconst LABEL_INSET_SPACE = 20;\r\n\r\nconst styles = StyleSheet.create({\r\n  androidContainer: {\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n  },\r\n  picker: {\r\n    height: 316,\r\n  },\r\n});\r\n"],"mappings":"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"}